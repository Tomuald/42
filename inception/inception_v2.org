#+title: Inception V2
#+PROPERTY: header-args :noweb yes
#+PROPERTY: header-args :mkdirp yes
#+TOKEN: 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
Shit still ain't working... docker-compose works fine, images and
containers are booted up. But I still get that fucking 403 error from
nginx, and I've got no freakin' clue why...

* nginx Docker
#+name: nginx-docker
#+header: :tangle ./srcs/requirements/nginx/Dockerfile
#+header: :mkdirp yes
#+begin_src dockerfile
FROM debian:buster

RUN apt-get -y update
RUN apt-get -y install nginx
RUN apt-get -y install php-fpm
RUN apt-get -y install openssl

RUN mkdir /var/www/tgarriss.42.fr/
RUN chown -R $USER:$USER /var/www/tgarriss.42.fr/

RUN mkdir /etc/nginx/ssl/
RUN openssl req -x509 -nodes -days 365 \
        -newkey rsa:2048 \
        -keyout /etc/nginx/ssl/tgarriss.key \
        -out /etc/nginx/ssl/tgarriss.csr \
        -subj "/C=CA/ST=QC/L=Thomas/O=42Quebec/OU=tgarriss/CN=tgarriss"

COPY ./conf/tgarriss.42.fr /etc/nginx/sites-available/
RUN cp /etc/nginx/sites-available/tgarriss.42.fr /etc/nginx/sites-enabled/
EXPOSE 443

ENTRYPOINT ["/usr/bin/nginx", "-g", "daemon off;"]
#+end_src

#+name: nginx-conf
#+header: :tangle ./srcs/requirements/nginx/conf/tgarriss.42.fr
#+header: :mkdirp yes
#+begin_src bash
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    root /var/www/tgarriss.42.fr;
    index index.php index.html index.htm;

    server_name tgarriss.42.fr;

    ssl_certificate /etc/nginx/ssl/tgarriss.csr;
    ssl_certificate_key /etc/nginx/ssl/tgarriss.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt { log_not_found off; access_log off; allow all; }
    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
        expires max;
        log_not_found off;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
    }
}
#+end_src

* mariadb Docker
#+name: mariadb-dockerfile
#+header: :tangle ./srcs/requirements/mariadb/Dockerfile
#+header: :mkdirp yes
#+begin_src dockerfile
FROM debian:buster

RUN apt-get -y update
RUN apt-get -y install mariadb-server

WORKDIR /tmp/
RUN mkdir -p /run/mysql/
COPY conf/db-config.sql .

RUN service mysql start && mariadb -u root < ./db-config.sql
RUN 	sed 's/bind-address            = 127.0.0.1/bind-address            = 0.0.0.0/'\
		 -i /etc/mysql/mariadb.conf.d/50-server.cnf

EXPOSE 3306

CMD ["mysqld"]
#+end_src

#+name: mariadb-install
#+header: :tangle ./srcs/requirements/mariadb/conf/db-install.sh
#+header: :mkdirp yes
#+begin_src sql
mysql_secure_installation << _EOF_

Y
password
password
Y
n
Y
Y
_EOF_

mariadb -u root < db-config.sql

#+end_src

#+name: mariadb-config
#+header: :tangle ./srcs/requirements/mariadb/conf/db-config.sql
#+header: :mkdirp yes
#+begin_src sql
CREATE DATABASE IF NOT EXISTS wordpress;
CREATE USER 'tgarriss'@'localhost';
SET PASSWORD FOR 'tgarriss'@'localhost' = PASSWORD('password');
GRANT ALL PRIVILEGES ON wordpress.* TO 'tgarriss'@'localhost' IDENTIFIED BY 'password';
GRANT ALL ON wordpress.* to 'tgarriss'@'%' IDENTIFIED BY 'password';

FLUSH PRIVILEGES;

CREATE USER 'superuser'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'superuser'@'localhost' WITH GRANT OPTION;
FLUSH PRIVILEGES;
CREATE USER 'superuser'@'%' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON *.* TO 'superuser'@'%' WITH GRANT OPTION;

FLUSH PRIVILEGES;

ALTER USER 'root'@'localhost' IDENTIFIED BY 'newpass';
flush privileges;
#+end_src
* wordpress Docker
#+name: wordpress-dockerfile
#+header: :tangle ./srcs/requirements/wordpress/Dockerfile
#+header: :mkdirp yes
#+begin_src dockerfile
FROM debian:buster

RUN apt-get -y update
RUN apt-get -y install php-fpm php-mysql
RUN apt-get -y install curl

RUN mkdir -p /var/www/tgarriss.42.fr/
RUN mkdir -p /run/php

WORKDIR /tmp/

RUN curl -LO https://wordpress.org/latest.tar.gz
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
RUN tar -xzvf latest.tar.gz

COPY ./conf/wp-config.php .
COPY /conf/index.php .

RUN chmod -R 777 .
RUN sed 's/listen = \/run\/php\/php7.3-fpm.sock/listen = 0.0.0.0:9000/' -i /etc/php/7.3/fpm/pool.d/www.conf

RUN mkdir -p /var/www/tgarriss.42.fr/wordpress/
RUN chmod 777 wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp-cli/
RUN cp -a /tmp/wordpress/. /var/www/tgarriss.42.fr/wordpress/
RUN chown -R www-data:www-data /var/www/tgarriss.42.fr/

EXPOSE 9000

CMD wp-cli core install --allow-root --title="Wordpress" --admin_name="nimda" --admin_password="password" --admin_email="tgarriss@student.42quebec.com" --path="/var/www/tgarriss.42.fr" --url="https://localhost/" && php-fpm7.3 -F -R
#+end_src

#+name: wp-config.php
#+header: :tangle ./srcs/requirements/wordpress/conf/wp-config.php
#+begin_src php
<?php

define( 'DB_NAME', 'wordpress' );
define( 'DB_USER', 'tgarriss' );
define( 'DB_PASSWORD', 'password' );
define( 'DB_HOST', 'mariadb' );
define( 'DB_CHARSET', 'utf8mb4' );

// The Database Collate type. Don't change this if in doubt.
define( 'DB_COLLATE', '' );


define('AUTH_KEY',         ':ZH@+<zTi!!1eOC}+b@53tKa;Qz<[:XOpxQ/@-cAYI%(SaD1~PP5t{T]}!S+TYP ');
define('SECURE_AUTH_KEY',  'CI#>.Q};8$B.||4qpKY`(v5T_+O|Fo6mS7%zUhRwAO>>(>V yT-&vt%S@*s>|aCX');
define('LOGGED_IN_KEY',    '4Bni|ERl30C#B5 5`Khyw%T%62e?ziB8+0T2 x1m#duhl.!Nz3FJaRs?l$s19<$B');
define('NONCE_KEY',        'F`}Kr86]y.w^MKi0<#E.U 5uyP5v1`%UZL#.=|PHh2`W;0b%iX/28Os(}tI++`bX');
define('AUTH_SALT',        'shM_[ &,UmDq_2*!@O=9XiZbF9jk$3-u#>WPjH6My,BC:-PnicM5)Mhg<ZrBxM#b');
define('SECURE_AUTH_SALT', '-}bkE$c|XpN6E?S*F}Tpb+-(-^A:|X`G<T|asN6Ve[DC;GpXr7FI$V}!@9~txx{U');
define('LOGGED_IN_SALT',   'qE.I486Qcwvy(|bSeIq&f[G:pvuw2, s:Wg)|*IDj+[`i;+P-OC#&,8S-O.nD`)L');
define('NONCE_SALT',       'vwYTd|HJWE4_NkDPaOAYbewDGQqI;VuL~I-Fqu{-Pp! {U~s#k632ST!oN?w%O7#');

$table_prefix = 'wp_';

define( 'WP_DEBUG', true );

if ( ! defined( 'ABSPATH' ) ) {
	define( 'ABSPATH', dirname( __FILE__ ) . '/' );
}

require_once( ABSPATH . 'wp-settings.php' );
#+end_src

#+name: wp-config
#+header: :tangle ./srcs/requirements/wordpress/conf/index.php
#+begin_src php
<?php
phpinfo();
?>
#+end_src

#+name: docker-compose
#+header: :tangle ./srcs/docker-compose.yml
#+begin_src dockerfile
version: '3'

services:
  nginx:
    container_name: nginx
    build: ./srcs/requirements/nginx/
    ports:
      - 443:443
    volumes:
      - /home/tgarriss/wordpress_data:/var/www/tgarriss.42.fr/wordpress
    networks:
      - network
    restart: always

  mariadb:
    container_name: mariadb
    build: ./srcs/requirements/mariadb/
    volumes:
      - /home/tgarriss/mariadb_data:/var/lib/mysql/
    networks:
      - network
    env_file:
      - .env
    ports:
      - 3306:3306
    restart: always

  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
    build: ./srcs/requirements/wordpress/
    ports:
      - 9000:9000
    env_file:
      - .env
    volumes:
      - /home/tgarriss/wordpress_data:/var/www/tgarriss.42.fr/wordpress/
    networks:
      - network
    restart: always

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: /home/tgarriss/mariadb_data
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: /home/tgarriss/wordpress_data
      o: bind

networks:
  network:
    driver: bridge
#+end_src

#+name: env
#+header: :tangle ./srcs/.env
#+begin_src text
BLA=bla
#+end_src
